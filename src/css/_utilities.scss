@import 'variables';

/// Margin and padding side IDs
/// @access private
/// @type {Map}
/// @property {String} t [top] - Top side label
/// @property {String} b [bottom] - Bottom side label
/// @property {String} r [right] - Right side label
/// @property {String} l [left] - Left side label
$sides: (
	t: top,
	b: bottom,
	r: right,
	l: left
);

/// Generate spacing helpers
@each $side in map-keys($sides) {
	.m#{$side}-0 {
		margin-#{map-get($sides, $side)}: 0;
	}

	.m#{$side}-1 {
		margin-#{map-get($sides, $side)}: var(--size-gap, #{$size-gap});
	}

	@for $itr from 2 through 5 {
		.m#{$side}-#{$itr} {
			margin-#{map-get($sides, $side)}: calc(#{$itr} * var(--size-gap, #{$size-gap}));
		}
	}

	.m#{$side}-auto {
		margin-#{map-get($sides, $side)}: auto;
	}
}

/// Generate width helpers
@each $itr in (25, 33, 50, 66, 75, 90, 100) {
	.w-#{$itr} {
		width: $itr * 1%;
	}

	.h-#{$itr} {
		height: $itr * 1%;
	}

	.mw-#{$itr} {
		min-width: $itr * 1%;
	}
}

@each $deg in (45, 90, 180) {
	.rotate-#{$deg} {
		transform: rotate(#{$deg}deg);
	}
}

.flex-column {
	flex-direction: column;
}

.flex-1 {
	flex: 1;
}

.align--center {
	align-items: center;
}

.justify--center {
	justify-content: center;
}

.sr-only {
	display: none;
}

.d-flex {
	display: flex;
	flex-flow: row wrap;

	&.nowrap {
		flex-wrap: nowrap;
	}
}

.stroke-current-color {
	stroke: currentColor;
}

.fill-current-color {
	fill: currentColor;
}

///
/// Typography
///
.text--accent,
.btn.text--accent,
tr.text--accent td {
	color: var(--color-accent);
}

.text--center {
	text-align: center;
}

.text--secondary {
	color: var(--color-secondary);
}

.text--muted {
	color: var(--color-muted);
}
